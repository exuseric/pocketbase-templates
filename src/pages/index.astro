---
import { Seo } from "astro-seo-meta";
import { getPage } from "../pocket-base";
import MainNav from "../components/style_3/MainNav.astro";
import HeroSection from "../components/style_1/HeroSection.astro";
import FooterSection from "../components/style_2/Footer.astro";
import PageSection from "../components/style_1/PageSection.astro";

const {
  expand: { hero, site_details, pages },
  title,
  Country,
} = await getPage();

const themeColor = site_details.theme_color;

const languages = {
  ke: "en",
  cbv: "pt-cv",
  moc: "pt-mz",
};
---

<html lang={languages[Country] ?? "en"}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <Seo
      title={site_details.title}
      description={site_details.description}
      themeColor={site_details.theme_color}
      icon="/favicon/favicon.ico"
      colorScheme="light"
      facebook={{
        image: "/favicon/android-chrome-512x512.png",
        url: site_details.url,
        type: "website",
      }}
      twitter={{
        image: "/favicon/android-chrome-512x512.png",
        site: "@yellowpages254",
        card: "summary",
      }}
    />
    <link rel="canonical" href={site_details.url} />
    <meta name="robots" content="index, follow" />
    <link
      rel="alternate"
      href={site_details.url}
      hreflang={languages[Country] ?? "en"}
    />
    <link rel="alternate" href={site_details.url} hreflang="x-default" />
    <meta
      property="article:published_time"
      content={new Date(site_details.published_date).toLocaleDateString(
        "en-US",
        { year: "numeric", month: "2-digit", day: "2-digit" }
      )}
    />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="./favicon/apple-touch-icon.jpg"
    />
    <link
      rel="icon"
      type="image/jpg"
      sizes="32x32"
      href="./favicon/favicon-32x32.jpg"
    />
    <link
      rel="icon"
      type="image/jpg"
      sizes="16x16"
      href="./favicon/favicon-16x16.jpg"
    />
    <link rel="sitemap" href="/sitemap.xml" />
    <!-- <link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=Unna:wght@400;700&display=swap"
			rel="stylesheet"
		/> -->
  </head>
  <body
    class="bg-neutral-50 text-neutral-950"
  >
    <MainNav
      siteName={title}
      collection={site_details}
      logo={site_details.logo}
      links={site_details.links}
    />
    <main class="content-grid min-h-screen">
      <HeroSection hero={hero} values={site_details.core_values} />
      {
        pages?.map((page) => (
          <PageSection
            page={page}
            pageId={page?.page_type}
            hasValues={false}
            values={site_details.core_values}
            iframe={site_details.location_iframe_src}
          />
        ))
      }
    </main>
    <FooterSection
      parentSiteTitle={site_details.parent_site_title}
      parentSiteUrl={site_details.parent_site_url}
      siteTitle={site_details.title.split("|")[0]?.trim("")}
      siteUrl={site_details.url}
    />
    <style define:vars={{ themeColor }} is:global>
      :root {
        --base: var(--themeColor);

        /* ANALOGOUS */
        --primary: var(--base);
        --secondary: oklch(from var(--base) l c calc(h - 45));
        --tertiary: oklch(from var(--base) l c calc(h + 45));

        /* SHADES */
        --primary-lighter: oklch(from var(--base) calc(l + 0.2) c h);
        --primary-light: oklch(from var(--base) calc(l + 0.1) c h);
        --primary-dark: oklch(from var(--base) calc(l - 0.1) c h);
        --primary-darker: oklch(from var(--base) calc(l - 0.2) c h);

        --secondary-lighter: oklch(from var(--secondary) calc(l + 0.2) c h);
        --secondary-light: oklch(from var(--secondary) calc(l + 0.1) c h);
        --secondary-dark: oklch(from var(--secondary) calc(l - 0.1) c h);
        --secondary-darker: oklch(from var(--secondary) calc(l - 0.2) c h);

        --tertiary-lighter: oklch(from var(--tertiary) calc(l + 0.2) c h);
        --tertiary-light: oklch(from var(--tertiary) calc(l + 0.1) c h);
        --tertiary-dark: oklch(from var(--tertiary) calc(l - 0.1) c h);
        --tertiary-darker: oklch(from var(--tertiary) calc(l - 0.2) c h);

        --squircle-clip: polygon(100.00% 50.00%, 99.95% 62.53%, 99.80% 67.70%, 99.56% 71.64%, 99.21% 74.93%, 98.76% 77.79%, 98.21% 80.34%, 97.56% 82.63%, 96.81% 84.70%, 95.94% 86.60%, 94.97% 88.33%, 93.89% 89.92%, 92.69% 91.37%, 91.37% 92.69%, 89.92% 93.89%, 88.33% 94.97%, 86.60% 95.94%, 84.70% 96.81%, 82.63% 97.56%, 80.34% 98.21%, 77.79% 98.76%, 74.93% 99.21%, 71.64% 99.56%, 67.70% 99.80%, 62.53% 99.95%, 50.00% 100.00%, 37.47% 99.95%, 32.30% 99.80%, 28.36% 99.56%, 25.07% 99.21%, 22.21% 98.76%, 19.66% 98.21%, 17.37% 97.56%, 15.30% 96.81%, 13.40% 95.94%, 11.67% 94.97%, 10.08% 93.89%, 8.63% 92.69%, 7.31% 91.37%, 6.11% 89.92%, 5.03% 88.33%, 4.06% 86.60%, 3.19% 84.70%, 2.44% 82.63%, 1.79% 80.34%, 1.24% 77.79%, 0.79% 74.93%, 0.44% 71.64%, 0.20% 67.70%, 0.05% 62.53%, 0.00% 50.00%, 0.05% 37.47%, 0.20% 32.30%, 0.44% 28.36%, 0.79% 25.07%, 1.24% 22.21%, 1.79% 19.66%, 2.44% 17.37%, 3.19% 15.30%, 4.06% 13.40%, 5.03% 11.67%, 6.11% 10.08%, 7.31% 8.63%, 8.63% 7.31%, 10.08% 6.11%, 11.67% 5.03%, 13.40% 4.06%, 15.30% 3.19%, 17.37% 2.44%, 19.66% 1.79%, 22.21% 1.24%, 25.07% 0.79%, 28.36% 0.44%, 32.30% 0.20%, 37.47% 0.05%, 50.00% 0.00%, 62.53% 0.05%, 67.70% 0.20%, 71.64% 0.44%, 74.93% 0.79%, 77.79% 1.24%, 80.34% 1.79%, 82.63% 2.44%, 84.70% 3.19%, 86.60% 4.06%, 88.33% 5.03%, 89.92% 6.11%, 91.37% 7.31%, 92.69% 8.63%, 93.89% 10.08%, 94.97% 11.67%, 95.94% 13.40%, 96.81% 15.30%, 97.56% 17.37%, 98.21% 19.66%, 98.76% 22.21%, 99.21% 25.07%, 99.56% 28.36%, 99.80% 32.30%, 99.95% 37.47%, 100.00% 50.00%);
      }
      html {
        scroll-behavior: smooth;
      }
      html,
      body {
        font-size: 16px !important;
      }
      :not(h1, h2, h3, h4, h5, h6) {
        text-wrap: pretty;
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      blockquote {
        white-space: unset;
        text-wrap: balance;
        max-inline-size: 50ch;
      }

      h3:not([class]) {
        font-size: 1.5rem;
        font-weight: bold;
      }

      .content-grid {
        --_padding-inline: 1rem;
        --_content-max-width: 160ch;
        --_breakout-max-width: 15ch;
        --_breakout-size: calc(
          (var(--_breakout-max-width) - var(--_content-max-width)) / 2
        );

        display: grid;
        grid-template-columns:
          [full-width-start] minmax(var(--_padding-inline), 1fr)
          [breakout-start] minmax(var(--_breakout-size), var(--_breakout-max-width))
          [content-start] min(100% - (var(--_padding-inline) * 2), var(--_content-max-width))
          [content-end] minmax(var(--_breakout-size), var(--_breakout-max-width))
          [breakout-end] minmax(var(--_padding-inline), 1fr)
          [full-width-end];
          /* min(100% - (var(--_padding-inline) * 2), var(--_content-max-width)) */
          /* repeat(12, calc(var(--_content-max-width) / 12)) */
      }

      .content-grid > :not(.breakout, .full-width) {
        grid-column: content;
      }

      .content-grid > .breakout {
        grid-column: breakout;
      }

      .content-grid > .full-width {
        grid-column: full-width;
      }

      a:not([class]) {
        color: inherit;
        padding: 0.25rem 0.425rem;
        transition: color 0.35s ease;
        border-bottom: 2px dotted transparent;
      }
      a:not([class]):hover,
      .footer-link:hover > span {
        background-color: var(--secondary);
        --tw-text-opacity: 1;
        color: rgb(255 255 255 / var(--tw-text-opacity));
      }

      .footer-link > span {
        padding: 0.425rem;
        border-radius: 0.25rem;
      }

      /* .clip-polygon-right {
        clip-path: polygon(75% 0%, 100% 50%, 75% 100%, 0% 100%, 25% 50%, 0% 0%);
      }

      .clip-polygon-left {
        clip-path: polygon(
          100% 0%,
          75% 50%,
          100% 100%,
          25% 100%,
          0% 50%,
          25% 0%
        );
      } */

      @media (min-width: 640px) {
        .content-grid {
          --_padding-inline: 2rem;
        }
        .sm\:clip-polygon-left {
          clip-path: polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%);
        }

        .sm\:clip-polygon-right {
          clip-path: polygon(0 0, 75% 0, 100% 100%, 25% 100%);
        }
      }
    </style>
  </body>
</html>
